buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.13.0'
        //classpath 'com.github.jcandksolutions.gradle:android-unit-test:2.0.1'
    }
}
apply plugin: 'com.android.application'


repositories {
    jcenter()
    maven{
        url 'http://repo.apisense.com/apisense-snapshot'
        credentials {
            username = "${artifactory_user}"
            password = "${artifactory_password}"
        }
    }
    maven{
        url 'http://repo.apisense.com/apisense-release'
        credentials {
            username = "${artifactory_user}"
            password = "${artifactory_password}"
        }
    }
}

android{

    compileSdkVersion 21
    buildToolsVersion '21.1.1'

    defaultConfig {
        applicationId "com.apisense.bee"
        minSdkVersion 15
        targetSdkVersion 15
        versionCode 1
        versionName "1.0"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions { abortOnError false }

    signingConfigs {
        customDebug  {
            storeFile file("KeystoreCertificates/debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }

    buildTypes {
        debug {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.customDebug
        }

        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {

    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'com.viewpagerindicator:library:2.4.1'
    compile(group: 'com.apisense.sdk', name: 'apisense-android-sdk', version: '1.0M1', ext: 'aar'){
        transitive true
    }

    compile ('com.google.android.gms:play-services:3.2.25')
}
/*
// Unit tests
// See: https://plugins.jetbrains.com/plugin/7488?pr=idea
apply plugin: 'android-unit-test'

dependencies {
    testCompile 'junit:junit:4.10'
    testCompile 'org.robolectric:robolectric:2.3'
}

// Coverage
// See: http://chrisjenx.com/gradle-robolectric-jacoco-dagger/
apply plugin: "jacoco"

jacoco {
    toolVersion = "0.7.1.201405082137"
}

// Merge Unit and Instrumented test execution results into one file
task mergeTestsCoverage(type: JacocoMerge, dependsOn: ["testDebug", "connectedAndroidTest"]){
    executionData = files ('build/jacoco/testDebug.exec', 'build/outputs/code-coverage/connected/coverage.ec')
    destinationFile = file('build/jacoco/mergedResults.exec')
}

// Use previous file to generate coverage over Bee main code
task testsCoverage(type: JacocoReport, dependsOn: "mergeTestsCoverage") {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        xml.destination = "${buildDir}/outputs/reports/coverage/coverageReport.xml"
        html.enabled = true
        html.destination = "${buildDir}/outputs/reports/coverage/html"
    }

// Ignoring R usage (constants only) and external libraries
    classDirectories = fileTree(
            dir: './build/intermediates/classes/debug',
            excludes: [
                    'android/',
                    'com/apisense/bee/R*.class',
                    'com/google/',
                    'com/viewpagerindicator',
                    'net/hockeyapp/android'

            ]
    )
    sourceDirectories = files('src/main/java', 'src/main/gen')
    executionData = files('build/jacoco/mergedResults.exec')
}*/


